@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model ITL_MakeId.Model.DomainModel.IdentityCard

@{
    ViewData["Title"] = "Edit";
}


@if (SignInManager.IsSignedIn(User))
{
    <div class="col-md-6 mr-auto ml-auto p-0 mt-3 mb-5">
        <h3 class="formbar mb-0">Validity</h3>

        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">Captured Photo</div>
                <div class="panel-body">
                    <div id="results">Your captured image will appear here...</div>
                </div>
                <br />
                <br />
            </div>
        </div>

        <div class="col-md-12 form-bg mb-5">
            <dl class="row col-md-6">
                <dt class="col-sm-5">
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Name)
                </dd>
                <dt class="col-sm-5">
                    @Html.DisplayNameFor(model => model.Designation)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Designation.Title)
                </dd>
                <dt class="col-sm-5">
                    @Html.DisplayNameFor(model => model.BloodGroup)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.BloodGroup.Name)
                </dd>
                <dt class="col-sm-5">
                    @Html.DisplayNameFor(model => model.CardNumber)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.CardNumber)
                </dd>
            </dl>

            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label class="control-label"> Start Date</label>
                    <input asp-for="ValidationStartDate" class="form-control" />
                    <span asp-validation-for="ValidationStartDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label"> End Date</label>
                    <input asp-for="ValidationEndDate" class="form-control" />
                    <span asp-validation-for="ValidationEndDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <input type="button" class="btn btn-success" value="Take Snapshot" onClick="take_snapshot()">
                </div>
            </form>
        </div>

        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
}


else
{
    <div class="text-center ml-auto mr-auto mt-3">
        <h1 class="display-4 mt-5 mb-5">Welcome</h1>
        <h3 class="display-4 mb-5">To</h3>
        <img class="mb-5 col-md-10" src="~/image/ba-2.png" />
    </div>
}
@section Scripts{
    <script src="~/webcamjs/webcam.js"></script>

    <script language="JavaScript">
        Webcam.set({
            width: 320,
            height: 240,
            image_format: 'jpeg',
            jpeg_quality: 90
        });
        Webcam.attach('#my_camera');
    </script>
    <!-- Code to handle taking the snapshot and displaying it locally -->
    <script language="JavaScript">
        function take_snapshot() {
            // take snapshot and get image data
            Webcam.snap(function (data_uri) {
                // display results in page
                document.getElementById('results').innerHTML =
                    '<img src="' +
                    data_uri +
                    '"/>';

                Webcam.upload(data_uri,
                    '/Camera/Capture',
                    function (code, text) {
                        alert('Photo Captured');
                    });

            });
        }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}